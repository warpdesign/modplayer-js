!function () { var e, t = []; function r(e) { var r = this, n = {}, s = -1; this.parameters.forEach(function (e, o) { var i = t[++s] || (t[s] = new Float32Array(r.bufferSize)); i.fill(e.value), n[o] = i }), this.processor.realm.exec("self.sampleRate=sampleRate=" + this.context.sampleRate + ";self.currentTime=currentTime=" + this.context.currentTime); var i = o(e.inputBuffer), a = o(e.outputBuffer); this.instance.process([i], [a], n) } function o(e) { for (var t = [], r = 0; r < e.numberOfChannels; r++)t[r] = e.getChannelData(r); return t } function n(e) { return e.$$processors || (e.$$processors = {}) } "function" != typeof AudioWorkletNode && (self.AudioWorkletNode = function (t, o, s) { var i = n(t)[o], a = s && s.numberOfOutputs ? s.numberOfOutputs : 2, u = t.createScriptProcessor(void 0, 2, a); if (console.log("outputChannelCount", a), u.parameters = new Map, i.properties) for (var c = 0; c < i.properties.length; c++) { var l = i.properties[c], p = t.createGain().gain; p.value = l.defaultValue, u.parameters.set(l.name, p) } var f = new MessageChannel; e = f.port2; var d = new i.Processor(s || {}); return e = null, u.port = f.port1, u.processor = i, u.instance = d, u.onaudioprocess = r, u }, Object.defineProperty((self.AudioContext || self.webkitAudioContext).prototype, "audioWorklet", { get: function () { return this.$$audioWorklet || (this.$$audioWorklet = new self.AudioWorklet(this)) } }), self.AudioWorklet = function () { function t(e) { this.$$context = e } return t.prototype.addModule = function (t, r) { var o = this; return fetch(t).then(function (e) { if (!e.ok) throw Error(e.status); return e.text() }).then(function (t) { var s = { sampleRate: 0, currentTime: 0, AudioWorkletProcessor: function () { this.port = e }, registerProcessor: function (e, t) { n(o.$$context)[e] = { realm: i, context: s, Processor: t, properties: t.parameterDescriptors || [] } } }; s.self = s; var i = new function (e, t) { var r = document.createElement("iframe"); r.style.cssText = "position:absolute;left:0;top:-999px;width:1px;height:1px;", t.appendChild(r); var o = r.contentWindow, n = o.document, s = "var window,$hook"; for (var i in o) i in e || "eval" === i || (s += ",", s += i); for (var a in e) s += ",", s += a, s += "=self.", s += a; var u = n.createElement("script"); u.appendChild(n.createTextNode('function $hook(self,console) {"use strict";\n        ' + s + ";return function() {return eval(arguments[0])}}")), n.body.appendChild(u), this.exec = o.$hook(e, console) }(s, document.documentElement); return i.exec((r && r.transpile || String)(t)), null }) }, t }()) }();
